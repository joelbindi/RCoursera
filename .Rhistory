h = 1:1000
h
mean(h)
EMA(h)
plot(h)
install.packages("quantmod")
EMA(h)
h
h = h+h
h
mean(h)
h/12341234124
1-9
(1-2)
1231234/1234123412423
pi
print h
h
h
h = 12:43
h
plot h
plot(h)
demo()
demo(graphics)
demo(Japanese)
demo(package = .packages(all.available = TRUE))
demo(image())
demos)quantmod::add_DEMA()
demos.quantmod()
demos(quantmod)
demo(chartSeries)
demo(quantmod)
demo(lattice)
demo(graphics.off(Hershey))
demo(zoo)
help
help()
aefsd
demos
demo
demo(zoo)
demo()
http://citibank.com.au/
install.packages(z00)
install.packages(zoo)
library("zoo", lib.loc="/usr/local/lib/R/3.2/site-library")
library("zoo", lib.loc="/usr/local/lib/R/3.2/site-library")
install.packages(zoo)
library("zoo")
install.packages(zoo)
aapl
aapl<-read.zoo("aapl.csv", + sep=",", header=TRUE, format = ("%Y-%m-%d"))
plot(aapl)
aapl = 1
aapl
aapl<-read.zoo("aapl.csv", + sep=",", header=TRUE, format = ("%Y-%m-%d"))
library("quantmod", lib.loc="/usr/local/lib/R/3.2/site-library")
install.packages(c("boot", "Matrix", "mgcv", "nlme", "nnet"), lib="/usr/local/Cellar/r/3.2.3/R.framework/Versions/3.2/Resources/library")
install.packages("Quandl")
Quandl("YAHOO/ASX_FMG_AX")
library("Quandl", lib.loc="/usr/local/lib/R/3.2/site-library")
Quandl("YAHOO/ASX_FMG_AX")
Quandl("YAHOO/ASX_FMG_AX")
library("curl", lib.loc="/usr/local/lib/R/3.2/site-library")
FMG = Quandl("YAHOO/ASX_FMG_AX")
plot(FMG)
FMG
getwd()
cd RStudio
getwd()
getwd()
cd()
ls()
dir()
39
s = 3214234
s
install.packages("~/Downloads/phenaff-R-Package-empfin-4ce1ab3.zip", repos = NULL, type = "win.binary")
install.packages("qrmtools")
install.packages(Finance)
install.packages("Finance")
devtools::install_github("rstudio/addinexamples", type = "source")
install.packages("devtools")
devtools::install_github("rstudio/addinexamples", type = "source")
devtools::install_github("thertrader/fidlr", type = "source")
library("quantmod", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("Quandl", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("slidify")
install.packages(KernSmooth)
install.packages("KernSmooth")
library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
find.package("devtools")
install.packages("TTR")
library("quantmod", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
h = 1:100
h
h[50]
mean(h)
sum(h)
dim(h)
n=15
plot(h)
EMA(h)
require("TTR")
EMA(h)
EMA(h, 10)
v = EMA(h, 10)
plot(v)
ematest = EMA(h, 10)
lines(ematest, col="red")
plot(lines)
plot(ematest)
ematest2 = EMA(h, 15)
plot(ematest2)
lines(ematest2, col="blue")
plot(ematest,ematest2)
plot(h,h^2)
lines(ematest2, col="blue")
lines(ematest, col="red")
plot(lines)
plot(ematest)
plot(ematest,col="red")
plot(ematest2, col="blue")
lines
x <- 4
class(x)
x <- c(4, TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[1[]
exists()
x[1]
x <- 1:4
y <- 2
x+y
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] <- 0
x
setwd("~/")
setwd("~/R")
data = read.csv("hw1_data.csv")
data
x[2]
data[2,]
data[2:3,]
data[1:2]
data[1:2,]
nrow(data)
ncol(data)
tail(data,2)
data[47]
data[47,]
summary(data)
ozone = x[,1]
ozone = data[,1]
ozone
newOzone = ozone[x > 31]
newOzone
ozone[x > 31]
ozone
data[,1]
data
data[,1]
ozone = data[,1]
ozone[ozone > 31] <- newOzone
ozone[ozone > 31] <- NA
ozone
ozone = data[,1]
ozone[ozone < 31] <- NA
temp = data[,4]
temp[temp < 90] <- NA
temp
ozone + temp = ot
ot = ozone + temp
ot
summary(ot)
mx = data[1:31,]
mx
summary(x)
temp = mx[,4]
temp
summary(temp)
mean(temp)
mx = data[32:61]
mx = data[32:61,]
temp = mx[,4]
temp
mean(temp)
may = data[1:31,]
ozoneMay = may[1,]
ozoneMay
ozoneMay = may[,1]
ozoneMay
mean(ozoneMay)
summary(ozoneMay)
ozoneMay
ozoneMay[!bad]
bad <- is.na(ozoneMay)
bad
ozoneMay[!bad]
ozoneMay = ozoneMay[!bad]
ozoneMay
library("curl", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
data = curl("http://www.cftc.gov/dea/newcot/FinFutWk.txt")
cr
cr = read.csv(data)
cr
data = curl("http://www.cftc.gov/dea/newcot/FinFutWk.txt")
cr = read.csv(data)
cr
data = curl("http://www.cftc.gov/dea/newcot/FinFutWk.txt")
cr
plot(cr)
